{
    "title": "dbt_project",
    "type": "object",
    "required": [
        "name",
        "version",
        "config-version"
    ],
    "$schema": "http://json-schema.org/draft-07/schema#",
    "properties": {
        "version": {
            "type": "string"
        },
        "name": {
            "type": "string"
        },
        "analysis-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "asset-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "clean-targets": {
            "$ref": "#/$defs/array_of_strings"
        },
        "config-version": {
            "type": "number",
            "default": 2
        },
        "dispatch": {
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "macro_namespace",
                    "search_order"
                ],
                "properties": {
                    "macro_namespace": {
                        "type": "string"
                    },
                    "search_order": {
                        "$ref": "#/$defs/array_of_strings"
                    }
                },
                "additionalProperties": false
            }
        },
        "docs-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "log-path": {
            "type": "string"
        },
        "macro-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "model-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "models": {
            "$ref": "#/$defs/model_configs"
        },
        "on-run-end": {
            "$ref": "#/$defs/array_of_strings"
        },
        "on-run-start": {
            "$ref": "#/$defs/array_of_strings"
        },
        "packages-install-path": {
            "type": "string"
        },
        "profile": {
            "type": "string"
        },
        "query-comment": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "type": "object",
                    "properties": {
                        "append": {
                            "$ref": "#/$defs/boolean_or_jinja_string"
                        },
                        "comment": {
                            "type": "string"
                        },
                        "job-label": {
                            "$ref": "#/$defs/boolean_or_jinja_string"
                        }
                    },
                    "additionalProperties": false
                }
            ]
        },
        "quoting": {
            "type": "object",
            "properties": {
                "database": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "identifier": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "schema": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                }
            }
        },
        "require-dbt-version": {
            "$ref": "#/$defs/string_or_array_of_strings"
        },
        "seed-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "seeds": {
            "$ref": "#/$defs/seed_configs"
        },
        "snapshot-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "snapshots": {
            "$ref": "#/$defs/snapshot_configs"
        },
        "sources": {
            "$ref": "#/$defs/source_configs"
        },
        "target-path": {
            "type": "string"
        },
        "test-paths": {
            "$ref": "#/$defs/array_of_strings"
        },
        "tests": {
            "$ref": "#/$defs/test_configs"
        },
        "vars": {
            "type": "object"
        }
    },
    "additionalProperties": false,
    "$defs": {
        "array_of_strings": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "empty_directory": {
          "type": "null"
        },
        "boolean_or_jinja_string": {
            "oneOf": [
                {
                    "$ref": "#/$defs/jinja_string"
                },
                {
                    "type": "boolean"
                }
            ]
        },
        "docs_config": {
            "title": "Docs config",
            "type": "object",
            "description": "Configurations for the appearance of nodes in the dbt documentation.",
            "properties": {
                "node_color": {
                    "type": "string",
                    "description": "The color of the node on the DAG in the documentation. It must be an Hex code or a valid CSS color name.",
                    "pattern": "^(#[a-fA-F0-9]{3}|#[a-fA-F0-9]{6}|[^#][a-zA-Z]*)$"
                },
                "show": {
                    "type": "boolean",
                    "default": true
                }
            },
            "additionalProperties": false
        },
        "jinja_string": {
            "type": "string",
            "pattern": "\\{\\{.*\\}\\}"
        },
        "label_configs": {
            "title": "Label configs",
            "type": "object",
            "description": "Configurations specific to BigQuery adapter used to add labels and tags to tables & views created by dbt.",
            "patternProperties": {
                "^[a-z][a-z0-9_-]{0,63}$": {
                    "oneOf": [
                        {
                            "type": "string",
                            "pattern": "^[a-z0-9_-]{0,64}$"
                        },
                        {
                            "$ref": "#/$defs/jinja_string"
                        }
                    ]
                }
            },
            "additionalProperties": false
        },
        "model_configs": {
            "title": "Model configs",
            "type": "object",
            "description": "Configurations set in the dbt_project.yml file will apply to all models that don't have a more specific configuration set.",
            "properties": {
                "+bind": {
                    "$ref": "#/$defs/boolean_or_jinja_string",
                    "default": false
                },
                "+database": {
                    "type": "string"
                },
                "+docs": {
                    "$ref": "#/$defs/docs_config"
                },
                "+enabled": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+grant_access_to": {
                    "title": "Authorized views",
                    "type": "array",
                    "description": "Configuration, specific to BigQuery adapter, used to setup authorized views.",
                    "items": {
                        "type": "object",
                        "properties": {
                            "database": {
                                "type": "string"
                            },
                            "project": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    }
                },
                "+hours_to_expiration": {
                    "type": "number",
                    "description": "Configuration specific to BigQuery adapter used to set an expiration delay (in hours) to a table."
                },
                "+incremental_strategy": {
                    "type": "string"
                },
                "+kms_key_name": {
                    "type": "string",
                    "description": "Configuration, specific to BigQuery adapter, of the KMS key name used for data encryption."
                },
                "+labels": {
                    "$ref": "#/$defs/label_configs"
                },
                "+materialized": {
                    "type": "string"
                },
                "+on_schema_change": {
                    "type": "string",
                    "enum": [
                        "append_new_columns",
                        "fail",
                        "ignore",
                        "sync_all_columns"
                    ]
                },
                "+persist_docs": {
                    "$ref": "#/$defs/persist_docs_config"
                },
                "+post-hook": {
                    "$ref": "#/$defs/array_of_strings"
                },
                "+pre-hook": {
                    "$ref": "#/$defs/array_of_strings"
                },
                "+schema": {
                    "type": "string"
                },
                "+sql_header": {
                    "type": "string"
                },
                "+tags": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+transient": {
                    "type": "boolean",
                    "description": "Configuration option specific to Snowflake adapter."
                }
            },
            "additionalProperties": {
                "oneOf" : [
                    {
                        "$ref": "#/$defs/model_configs"
                    },
                    {
                        "$ref": "#/$defs/empty_directory"
                    }
                ]
            }
        },
        "persist_docs_config": {
            "title": "Persist docs config",
            "type": "object",
            "description": "Configurations for the persistence of the dbt documentation.",
            "properties": {
                "columns": {
                    "$ref": "#/$defs/boolean_or_jinja_string",
                    "default": true
                },
                "relation": {
                    "$ref": "#/$defs/boolean_or_jinja_string",
                    "default": true
                }
            },
            "additionalProperties": false
        },
        "seed_configs": {
            "title": "Seed configs",
            "type": "object",
            "properties": {
                "+copy_grants": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+database": {
                    "type": "string"
                },
                "+enabled": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+persist_docs": {
                    "$ref": "#/$defs/persist_docs_config"
                },
                "+quote_columns": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+schema": {
                    "type": "string"
                },
                "+tags": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+transient": {
                    "type": "boolean",
                    "description": "Configuration option specific to Snowflake adapter."
                }
            },
            "additionalProperties": {
                "oneOf" : [
                    {
                        "$ref": "#/$defs/seed_configs"
                    },
                    {
                        "$ref": "#/$defs/empty_directory"
                    }
                ]
            }
        },
        "snapshot_configs": {
            "title": "Snapshot configs",
            "type": "object",
            "properties": {
                "+alias": {
                    "type": "string"
                },
                "+check_cols": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+enabled": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+grants": {
                    "type": "object"
                },
                "+persist_docs": {
                    "$ref": "#/$defs/persist_docs_config"
                },
                "+post-hook": {
                    "$ref": "#/$defs/array_of_strings"
                },
                "+pre-hook": {
                    "$ref": "#/$defs/array_of_strings"
                },
                "+quote_columns": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+strategy": {
                    "type": "string"
                },
                "+tags": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+target_database": {
                    "type": "string"
                },
                "+target_schema": {
                    "type": "string"
                },
                "+transient": {
                    "type": "boolean",
                    "description": "Configuration option specific to Snowflake adapter."
                },
                "+unique_key": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+updated_at": {
                    "type": "string"
                }
            },
            "additionalProperties": {
                "oneOf" : [
                    {
                        "$ref": "#/$defs/snapshot_configs"
                    },
                    {
                        "$ref": "#/$defs/empty_directory"
                    }
                ]
            }
        },
        "source_configs": {
            "title": "Source configs",
            "type": "object",
            "properties": {
                "+enabled": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+tags": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                }
            },
            "additionalProperties": {
                "oneOf" : [
                    {
                        "$ref": "#/$defs/source_configs"
                    },
                    {
                        "$ref": "#/$defs/empty_directory"
                    }
                ]
            }
        },
        "string_or_array_of_strings": {
            "oneOf": [
                {
                    "type": "string"
                },
                {
                    "$ref": "#/$defs/array_of_strings"
                }
            ]
        },
        "test_configs": {
            "title": "Test configs",
            "type": "object",
            "description": "Configurations set in the dbt_project.yml file will apply to all tests that don't have a more specific configuration set.",
            "properties": {
                "+alias": {
                    "type": "string",
                    "description": "Only relevant when `store_failures` is true"
                },
                "+database": {
                    "type": "string",
                    "description": "Only relevant when `store_failures` is true"
                },
                "+enabled": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+error_if": {
                    "type": "string"
                },
                "+fail_calc": {
                    "type": "string"
                },
                "+limit": {
                    "type": "number"
                },
                "+schema": {
                    "type": "string",
                    "description": "Only relevant when `store_failures` is true"
                },
                "+severity": {
                    "type": "string",
                    "enum": [
                        "warn",
                        "error"
                    ]
                },
                "+store_failures": {
                    "$ref": "#/$defs/boolean_or_jinja_string"
                },
                "+tags": {
                    "$ref": "#/$defs/string_or_array_of_strings"
                },
                "+warn_if": {
                    "type": "string"
                }
            },
            "additionalProperties": {
                "oneOf" : [
                    {
                        "$ref": "#/$defs/test_configs"
                    },
                    {
                        "$ref": "#/$defs/empty_directory"
                    }
                ]
            }
        }
    }
}